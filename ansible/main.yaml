---   
- hosts: all
  become: yes
  tasks:
  - name: install packages
    yum: 
      name: 
        - http://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        - epel-release
      state: present
      update_cache: true

- hosts: master, slave
  become: yes
  tasks:
  - name: install Postgresql14
    yum:
      name: 
        - postgresql14-server
        - postgresql14
        - policycoreutils-python
        - python-pip
        - python-setuptools
      state: present
      update_cache: true
      
  - name: Install pexpect
    pip:
      name: pexpect
      
  - name: check init 
    stat:
      path: /var/lib/pgsql/14/data/pg_stat
    register: stat_result
    
  - name: init db
    shell: postgresql-14-setup initdb
    when: not stat_result.stat.exists and ansible_hostname == 'master'
    
  - name: Copy config files
    template: 
      src: "{{ item }}" 
      dest: /var/lib/pgsql/14/data/
      owner: postgres 
      group: postgres
      mode: 0600
    with_fileglob:
      - templates/*.conf
      
  - name: start postgresql
    systemd:
      name: postgresql-14
      enabled: yes
      state: restarted  
    when: ansible_hostname == 'master'
    
  - name: create repl user
    expect: 
      command: su - postgres -c "createuser --replication -P repluser"
      timeout: null
      responses: 
        '.*Enter password .*': "12345678q"
        '.*Enter it.*': "12345678q" 
    when: ansible_hostname == 'master'
    
  - name: create barman user
    expect: 
      command: su - postgres -c "createuser --superuser barman"
      timeout: null
      responses: 
        '.*Enter password .*': "12345678q"
        '.*Enter it.*': "12345678q"                 
    when: ansible_hostname == 'master'
    
  - name: restart network on master
    shell: systemctl restart network
    when: ansible_hostname == 'master'
    
  - name: clear workdir on slave
    shell: rm -rf /var/lib/pgsql/14/data/
    when: ansible_hostname == 'slave'  
    
  - name: create basebackup
    expect: 
      command: su - postgres -c "pg_basebackup -h 192.168.11.150 -D /var/lib/pgsql/14/data -U repluser -P -v  -R -Xs -Fp -C -S pgstandby1"
      timeout: null
      responses: 
        '.*Password.*': "12345678q"
    when: ansible_hostname == 'slave'
    
  - name: start postgresql
    systemd:
      name: postgresql-14
      enabled: yes
      state: restarted  
    when: ansible_hostname == 'slave'
    
- hosts: backup
  become: yes
  tasks:     
  - name: install barman
    yum: 
      name: 
        - barman
        - postgresql14
      state: present
      update_cache: true   
      
  - name: Copy barman.conf
    template:
      src: templates/barman.conf.j2
      dest: /etc/barman.conf
      
  - name: Copy config
    template:
      src: templates/pg.conf.j2
      dest: /etc/barman.d/pg.conf

  - name: Start barman
    shell: barman cron && barman receive-wal --create-slot pg
    
  - name: Start barman
    shell: barman switch-xlog --force --archive pg
    
  - name: Add crontab
    shell: echo "*/5 * * * *   barman /usr/bin/barman backup pg" >> /etc/crontab
