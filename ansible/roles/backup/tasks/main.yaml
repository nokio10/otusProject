- name: load elk.repo
  copy:
    src: "elk.repo"
    dest: /etc/yum.repos.d/elasticsearch.repo
    owner: root
    group: root
    mode: '0644'

- name: load kibana.repo
  copy:
    src: "kibana.repo"
    dest: /etc/yum.repos.d/kibana.repo
    owner: root
    group: root
    mode: '0644'

- name: install packages
  yum: 
    name: 
      - http://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
      - java-1.8.0
    state: present
    update_cache: true

- name: install barman
  yum: 
    name: 
      - barman
      - postgresql14
      - elasticsearch
      - kibana
      - logstash
    state: present
    update_cache: true   
    
- name: Copy barman.conf
  template:
    src: templates/barman.conf.j2
    dest: /etc/barman.conf
    
- name: Copy config
  template:
    src: templates/pg.conf.j2
    dest: /etc/barman.d/pg.conf

- name: Start barman
  shell: barman cron && barman receive-wal --create-slot pg
  
- name: Start barman
  shell: barman switch-xlog --force --archive pg
  
- name: Add crontab
  shell: echo "*/30 * * * *   barman /usr/bin/barman backup pg" >> /etc/crontab

#Настройка сервера сбора логов
- name: Config kibana host
  lineinfile:
    dest: /etc/kibana/kibana.yml
    regexp: '#server.host: "localhost"'
    line: 'server.host: "0.0.0.0"'
    state: present


- name: restart kibana
  systemd:
    name: kibana
    enabled: yes
    state: restarted

- name: load rsyslog.conf
  copy:
    src: "rsyslog.conf"
    dest: /etc/rsyslog.conf
    owner: root
    group: root
    mode: '0644'

- name: Restart rsyslog
  systemd:
    name: rsyslog
    enabled: yes
    state: restarted

- name: Config auditd
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: '##tcp_listen_port = 60'
    line: 'tcp_listen_port = 60'
    state: present

- name: Restart auditd
  shell: service auditd restart

- name: load filter.conf
  copy:
    src: "filter.conf"
    dest: /etc/logstash/conf.d/filter.conf
    owner: root
    group: root
    mode: '0644'


- name: load input.conf
  copy:
    src: "input.conf"
    dest: /etc/logstash/conf.d/input.conf
    owner: root
    group: root
    mode: '0644'


- name: load output.conf
  copy:
    src: "output.conf"
    dest: /etc/logstash/conf.d/output.conf
    owner: root
    group: root
    mode: '0644'


- name: restart logstash
  systemd:
    name: logstash
    enabled: yes
    state: restarted


- name: restart elasticsearch
  systemd:
    name: elasticsearch
    enabled: yes
    state: restarted

- name: import index pattern
  shell: 'curl -X POST localhost:5601/api/saved_objects/_import?createNewCopies=true -H "kbn-xsrf: true" --form file=@myweb.ndjson'
  args:
    chdir: /vagrant/ansible/roles/backup/files/