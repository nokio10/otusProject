- name: install packages
  yum: 
    name: 
      - http://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    state: present
    update_cache: true

- name: install Postgresql14
  yum:
    name: 
      - postgresql14-server
      - postgresql14
      - policycoreutils-python
      - python-pip
      - python-setuptools
      - filebeat
    state: present
    update_cache: true
    
- name: Install pexpect
  pip:
    name: pexpect
    
- name: check init 
  stat:
    path: /var/lib/pgsql/14/data/pg_stat
  register: stat_result
  
- name: init db
  shell: postgresql-14-setup initdb
  when: not stat_result.stat.exists and ansible_hostname == 'master'
  
- name: Copy config files
  template: 
    src: "{{ item }}" 
    dest: /var/lib/pgsql/14/data/
    owner: postgres 
    group: postgres
    mode: 0600
  with_fileglob:
    - templates/*.conf
    
- name: start postgresql
  systemd:
    name: postgresql-14
    enabled: yes
    state: restarted  
  when: ansible_hostname == 'master'
  
- name: create repl user
  expect: 
    command: su - postgres -c "createuser --replication -P repluser"
    timeout: null
    responses: 
      '.*Enter password .*': "{{ repluser_password }}"
      '.*Enter it.*': "{{ repluser_password }}" 
  when: ansible_hostname == 'master'
  
- name: create barman user
  expect: 
    command: su - postgres -c "createuser --superuser barman"
    timeout: null
    responses: 
      '.*Enter password .*': "{{ barman_password }}" 
      '.*Enter it.*': "{{ barman_password }}"              
  when: ansible_hostname == 'master'

- name: create webmaster user
  expect: 
    command: su - postgres -c "createuser --superuser webmaster"
    timeout: null
    responses: 
      '.*Enter password .*': "{{ webmaster_password }}" 
      '.*Enter it.*': "{{ webmaster_password }}"                 
  when: ansible_hostname == 'master'

- name: Create db website
  shell: su - postgres -c "psql -c 'CREATE DATABASE website;'"
  when: ansible_hostname == 'master'

- name: Grant priv db website
  shell: su - postgres -c "psql -c 'GRANT ALL PRIVILEGES ON DATABASE website TO webmaster;'"
  when: ansible_hostname == 'master'

- name: restart network on master
  shell: systemctl restart network
  when: ansible_hostname == 'master'
  
- name: clear workdir on slave
  shell: rm -rf /var/lib/pgsql/14/data/
  when: ansible_hostname == 'slave'  
  
- name: create basebackup
  expect: 
    command: su - postgres -c "pg_basebackup -h 192.168.11.150 -D /var/lib/pgsql/14/data -U repluser -P -v  -R -Xs -Fp -C -S pgstandby1"
    timeout: null
    responses: 
      '.*Password.*': "{{ repluser_password }}"
  when: ansible_hostname == 'slave'
  
- name: Create log dir
  file:
    path: /var/log/postgresql
    state: directory
    owner: postgres
    group: postgres
    mode: '0644'

- name: load filebeat.yml
  copy:
    src: "filebeat.yml"
    dest: /etc/filebeat/filebeat.yml
    owner: root
    group: root
    mode: '0644'

- name: Active nginx.yml
  copy:
    src: postgresql.yml
    dest: /etc/filebeat/modules.d/postgresql.yml 

- name: restart filebeat
  systemd:
    name: filebeat
    enabled: yes
    state: restarted

- name: start postgresql
  systemd:
    name: postgresql-14
    enabled: yes
    state: restarted  
  when: ansible_hostname == 'slave'
